{
  "createdUTC": "2020-05-29T18:06:30.651Z",
  "definitionIsPublic": false,
  "definitionName": "DL-10HS",
  "displayName": "DL-10HS Legacy Large Soil Moisture Sensor for LoRaWAN®",
  "manufacturer": "Decentlab",
  "organizationId": "9f014719-4add-4989-ba0f-fc7edc44d893",
  "parser": "\n/* https://www.decentlab.com/support */\n\nvar decentlab_decoder = {\n  PROTOCOL_VERSION: 2,\n  SENSORS: [\n    {length: 1,\n     values: [{name: 'raw_sensor_reading',\n               displayName: 'Raw sensor reading',\n               convert: function (x) { return 3 * (x[0] - 32768) / 32768 * 1000; },\n               unit: 'mV'},\n              {name: 'volumetric_water_content',\n               displayName: 'Volumetric water content',\n               convert: function (x) { return 2.97*Math.pow(10, -9) * Math.pow(3000*(x[0]-32768)/32768, 3) - 7.37*Math.pow(10, -6) * Math.pow(3000*(x[0]-32768)/32768, 2) + 6.69*Math.pow(10, -3) * (3000*(x[0]-32768)/32768) - 1.92; },\n               unit: 'm³⋅m⁻³'}]},\n    {length: 1,\n     values: [{name: 'battery_voltage',\n               displayName: 'Battery voltage',\n               convert: function (x) { return x[0] / 1000; },\n               unit: 'V'}]}\n  ],\n\n  read_int: function (bytes, pos) {\n    return (bytes[pos] << 8) + bytes[pos + 1];\n  },\n\n  decode: function (msg) {\n    var bytes = msg;\n    var i, j;\n    if (typeof msg === 'string') {\n      bytes = [];\n      for (i = 0; i < msg.length; i += 2) {\n        bytes.push(parseInt(msg.substring(i, i + 2), 16));\n      }\n    }\n\n    var version = bytes[0];\n    if (version != this.PROTOCOL_VERSION) {\n      return {error: \"protocol version \" + version + \" doesn't match v2\"};\n    }\n\n    var deviceId = this.read_int(bytes, 1);\n    var flags = this.read_int(bytes, 3);\n    var result = {'protocol_version': version, 'device_id': deviceId};\n    // decode payload\n    var pos = 5;\n    for (i = 0; i < this.SENSORS.length; i++, flags >>= 1) {\n      if ((flags & 1) !== 1)\n        continue;\n\n      var sensor = this.SENSORS[i];\n      var x = [];\n      // convert data to 16-bit integer array\n      for (j = 0; j < sensor.length; j++) {\n        x.push(this.read_int(bytes, pos));\n        pos += 2;\n      }\n\n      // decode sensor values\n      for (j = 0; j < sensor.values.length; j++) {\n        var value = sensor.values[j];\n        if ('convert' in value) {\n          result[value.name] = {displayName: value.displayName,\n                                value: value.convert.bind(this)(x)};\n          if ('unit' in value)\n            result[value.name]['unit'] = value.unit;\n        }\n      }\n    }\n    return result;\n  }\n};\n\nfunction parsePayload(payload) {\n  var decoded = decentlab_decoder.decode(payload);\n  Object.keys(decoded).map(function(key, index) { decoded[key] = decoded[key]['value'];});\n  return decoded;\n}",
  "sensors": [
    {
      "name": "raw_sensor_reading",
      "displayName": "Raw sensor reading",
      "type": "milliVolts"
    },
    {
      "name": "volumetric_water_content",
      "displayName": "Volumetric water content /m³⋅m⁻³/",
      "type": "float"
    },
    {
      "displayName": "Battery voltage",
      "name": "battery_voltage",
      "thresholds": [
        {
          "name": "Battery voltage is low",
          "type": "lessthan",
          "warning": "2.2"
        }
      ],
      "type": "volts"
    }
  ],
  "updatedUTC": "2020-05-29T18:06:30.651Z",
  "version": "v1.0"
}